<?xml version="1.0" encoding="UTF-8"?>
<!-- are both targetNamespace and xmlns attrs needed? -->
<xs:schema targetNamespace="https://uwlib-cams.github.io/map_storage/xsd/"
    xmlns="https://uwlib-cams.github.io/map_storage/xsd/" 
    xmlns:uwsinopia="https://uwlib-cams.github.io/sinopia_maps/xsd/"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified"
    vc:minVersion="1.1">

    <!-- ***** IMPORT/INCLUDE ***** -->
    
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
    <xs:import namespace="http://www.w3.org/2001/XMLSchema"
        schemaLocation="https://www.w3.org/2001/XMLSchema.xsd"/>
    <xs:import namespace="https://uwlib-cams.github.io/sinopia_maps/xsd/"
        schemaLocation="https://uwlib-cams.github.io/sinopia_maps/xsd/uwsinopia.xsd"/>
    
    <!--  ***** REUSE THESE TYPES ***** -->
    
    <xs:simpleType name="prop_set_label_type">
        <xs:annotation>
            <xs:documentation>For RDA property sets:</xs:documentation>
            <xs:documentation>These options correspond to documents published at the RDA Registry detailing RDA/RDF properties for use with a given domain.</xs:documentation>
            <xs:documentation>Most property-set labels will be self-explanatory, but note that...</xs:documentation>
            <xs:documentation>The 'rdax_p00k' property set includes properties for use with the class 'RDA Entity'.</xs:documentation>
            <xs:documentation>For other property sets:</xs:documentation>
            <xs:documentation>The 'dcterms' property set includes the Dublin Core Terms.</xs:documentation>
        </xs:annotation>
        <!-- (MAP ID component) -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="rdaw_p10k"/>
            <xs:enumeration value="rdae_p20k"/>
            <xs:enumeration value="rdam_p30k"/>
            <xs:enumeration value="rdai_p40k"/>
            <xs:enumeration value="rdaa_p50k"/>
            <xs:enumeration value="rdan_p80k"/>
            <xs:enumeration value="rdap_p70k"/>
            <xs:enumeration value="rdat_p70k"/>
            <xs:enumeration value="rdax_p00k"/>
            <!-- RDA/ONIX Framework element set not yet added  -->
            <!-- RDA unconstrained not yet added -->
            <!-- RDA metadata element properties (Deprecated) will not be added -->
            <xs:enumeration value="dcterms"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="resource_label_type">
        <xs:restriction base="xs:string">
            <!-- (MAP ID component) -->
            <xs:enumeration value="rdaWork"/>
            <xs:enumeration value="rdaAgent"/>
            <xs:enumeration value="rdaItem"/>
            <xs:enumeration value="rdaPerson"/>
            <xs:enumeration value="rdaCorporateBody"/>
            <xs:enumeration value="rdaExpression"/>
            <xs:enumeration value="rdaManifestation"/>
            <xs:enumeration value="rdaFamily"/>
            <xs:enumeration value="rdaPlace"/>
            <xs:enumeration value="rdaTimespan"/>
            <xs:enumeration value="rdaCollectiveAgent"/>
            <xs:enumeration value="rdaNomen"/>
            <xs:enumeration value="rdaEntity"/>
            <!-- enumeration below for testing to do delete later -->
            <xs:enumeration value="testMultiplePropSets"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="lang_string_type">
        <!-- Use values from https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry  -->
        <!-- to do need default "en" -->
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute ref="xml:lang" use="required"/>
                <!-- to do / wishlist / question: possible to add enumerations here?? -->
                <!-- en -->
                <!-- zxx -->
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    
    <xs:simpleType name="localid_attr">
        <xs:restriction base="xs:string">
            <!-- Possible to an XSD mechanism to prevent duplicate values? -->
            <xs:pattern value="\S+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:complexType name="iri_type">
        <xs:attribute name="iri">
            <xs:simpleType>
                <xs:restriction base="xs:anyURI">
                    <!-- IRI validation pattern -->
                    <xs:pattern value="https?:\/\/\S*"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    
    <!-- ********* SCHEMA ********* -->

    <!-- **** prop_set **** -->
    <xs:element name="prop_set" type="prop_set_type"/>
    
    <xs:complexType name="prop_set_type">
        <xs:sequence>
            <xs:element name="prop_set_label" type="prop_set_label_type" minOccurs="1"
            maxOccurs="1"/>
            <xs:element name="prop" type="prop_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- *** prop *** -->
    <xs:complexType name="prop_type">
        <xs:sequence>
            <xs:element name="prop_iri" type="iri_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="prop_label" type="lang_string_type" minOccurs="1"
                maxOccurs="unbounded"/>
            <xs:element name="prop_domain" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="prop_domain_includes" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="prop_range" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="prop_range_includes" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <!-- CONSIDER creating additional elements so that URLs can be stored for 1) output as ref links to appear in Sinopia UI and
                2) output as ref links with descriptive text to appear in HTML -->
            <xs:element name="prop_related_url" type="url_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="sinopia" type="uwsinopia:sinopia_type" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="localid_prop" type="localid_attr" use="required"/>
    </xs:complexType>

    <!-- BMR TO DO [!] This element needs work; attributes need better constraints -->
    <xs:complexType name="url_type">
        <xs:simpleContent>
            <!-- Need to improve constraints on URL values here; xs:anyURI alone not effective -->
            <xs:extension base="xs:anyURI">
                <xs:attribute name="url"/>
                <!-- Use values to differentiate 1) output as ref links to appear in Sinopia UI vs. 2) output as ref links with descriptive text to appear in HTML -->
                <!-- Need to enumerate link_category, one category should be remark URL -->
                <xs:attribute name="link_category"/>
                <!-- Maybe store link text as text child, not in @ -->
                <xs:attribute name="link_text"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>    

</xs:schema>
