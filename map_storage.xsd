<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    targetNamespace="https://uwlib-cams.github.io/map_storage/"
    xmlns="https://uwlib-cams.github.io/map_storage/" elementFormDefault="qualified"
    vc:minVersion="1.1">

    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>
    <xs:import namespace="http://www.w3.org/2001/XMLSchema"
        schemaLocation="https://www.w3.org/2001/XMLSchema.xsd"/>

    <xs:element name="mapStorage" type="mapStorage_type"/>

    <xs:complexType name="mapStorage_type">
        <xs:sequence>
            <xs:element name="mapid_institution" type="mapid_institution_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="propSet" type="propSet_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="mapid_institution_type">
        <xs:restriction base="xs:string">
            <!-- Enumerate possible resource template institution IDs (just one) (a MAP ID component) -->
            <xs:enumeration value="WAU"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="propSet_type">
        <xs:sequence>
            <xs:element name="mapid_propSet" type="mapid_propSet_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="prop" type="prop_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="mapid_propSet_type">
        <xs:restriction base="xs:string">
            <!-- Enumerate possible resource template propertySet IDs (a MAP ID component) -->
            <!-- ENUMERATE/UPDATE HERE -->
            <xs:enumeration value="rda_Work"/>
            <xs:enumeration value="rda_Expression"/>
            <xs:enumeration value="rda_Manifestation"/>
            <xs:enumeration value="rda_Item"/>
            <xs:enumeration value="rda_Agent"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="prop_type">
        <xs:sequence>
            <!-- prop_iri constraint not constraining @ values to IRIs -->
            <xs:element name="prop_iri" type="iri_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="prop_label" type="label_type" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element name="prop_domain" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="prop_range" type="iri_type" minOccurs="0" maxOccurs="unbounded"/>
            <!-- CONSIDER creating additional elements so that URLs can be stored for 1) output as ref links to appear in Sinopia UI and
                2) output as ref links with descriptive text to appear in HTML -->
            <xs:element name="prop_related_url" type="url_type" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="platform_set" type="platform_set_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <!-- Need to REQUIRE @localid_prop -->
        <xs:attribute name="localid_prop"/>
    </xs:complexType>

    <xs:complexType name="iri_type">
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="iri"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- VALIDATION ERROR: 
        Element 'prop_label' must have no character or element information item [children], because the type's content type is empty.
        See issue #3-->
    <xs:complexType name="label_type">
        <xs:attribute ref="xml:lang" use="required"/>
    </xs:complexType>

    <!-- CONSIDER creating additional elements so that URLs can be stored for 1) output as ref links to appear in Sinopia UI and
        2) output as ref links with descriptive text to appear in HTML -->
    <xs:complexType name="url_type">
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="url"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="platform_set_type">
        <xs:sequence>
            <xs:element name="sinopia" type="sinopia_type" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="sinopia_type">
        <xs:sequence>
            <xs:element name="resourceSet" type="resourceSet_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="resourceSet_type">
        <xs:sequence>
            <xs:element name="resource" type="resource_type" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element name="constraints" type="constraints_type"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="resource_type">
        <xs:sequence>
            <xs:element name="mapid_resource" type="mapid_resource_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="resource_iri" type="resource_iri_type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="resource_label" type="label_type" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    
    <xs:complexType name="mapid_resource_type">
        <!-- ENUMERATE/UPDATE HERE -->
        <!-- Enumerate possible resource template resource IDs (a MAP ID component) -->
        <!-- Due to the RDA Registry data structure we pull from, the mapid_propSet and mapid_resource values will be essentially the same and redundant, 
            but this may not be the case for other vocabularies -->
    </xs:complexType>
    
    <xs:complexType name="resource_iri_type">
        <!-- ENUMERATE/UPDATE HERE -->
        <!-- (how to enumerate @ values?) -->
        <!-- List possible resource template resource IRIs -->
        <!-- Put IRIs in an @; constrain to xsd:anyURI -->
    </xs:complexType>
    
    <xs:complexType name="constraints_type">
    </xs:complexType>

</xs:schema>
