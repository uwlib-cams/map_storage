<?xml version="1.0" encoding="UTF-8"?>
<mapStorage mapid_institution="00102mapidhere">
    <!-- mapStorage: root element -->
    <!-- mapid_institution: mandatory, non-repeatable, only permissible value is 'WAU' (or another string we choose to represent our institution) -->
    <propSet mapid_propSet="001mapidhere">
        <!-- propSet: mandatory, repeatable -->
        <!-- id_propSet: mandatory, non-repeatable, enumerate values (rda_Work, rda_Expression, ...)
                RT IDs will be generated by concatenating id_ap, id_propSet, id_resource, id_format, id_custom
                [?] So, does each need to be globally unique?  -->
        <prop localid_prop="a01">
            <!-- prop: mandatory, repeatable -->
            <prop_iri iri="http://example.com/property001"/>
            <!-- iri_prop: mandatory, non-repeatable, constrain @ value to xsd:anyURI -->
            <prop_label xml:lang="en">has basket weaver</prop_label>
            <!-- label_prop: mandatory, repeatable, require lang tag -->
            <prop_domain iri="http://example.com/class001"/>
            <!-- domain: optional, repeatable, constrain @ value to xsd:anyURI -->
            <prop_range iri="http://example.com/class002"/>
            <!-- range: optional, repeatable, constrain @ value to xsd:anyURI -->
            <prop_related_url/>
            <!-- related_url: optional, repeatable, xsd:anyURI, for RDA properties toolkit link goes here -->
            <platformSet>
                <!-- platformSet: optional, non-repeatable -->
                <!-- Optional platformSet element should solve validation problems for unused properties; unused props have no platformSet -->
                <!-- [?] Possible to make *at least one subelement (sinopia, etc.) mandatory within platformSet element? -->
                <!-- Initial platformSet child element will be sinopia -->
                <!-- Stands to reason that all platformSet child elements will be modeled differently -->
                <sinopia>
                    <!-- sinopia: optional, non-repeatable -->
                    <!-- Making sinopia element optional should solve validation problems for unused entities -->



                    <!-- BMR TO DO:
                    What about the new resource attribute > suppressible?? 
                    How would that work? 
                    How to add for that?? At resource level? At implementationSet level?? -->
                    
                    <resource mapid_resource="02039mapidhere">
                        <!-- resource: mandatory, repeatable -->
                        <!-- domain element above *and* resource element here is logically redundant, but resource element here functions to output property information to a specific sinopia RT, domain element above is informative  -->



                        <implementations>
                            <!-- constraints nests under *resourceSet* because the same prop may be implemented for multiple resources with the same constraints?? I think -->
                            <!-- constraints: mandatory, non-repeatable -->


                            <implementationSet lid_formatSet="a03">
                                <!-- formatSet: mandatory, repeatable -->

                                <!-- This bit below is a bit experimental
                                    So, I believe that to implement a prop in an RT you must provide *at least" a format mapid,
                                    With a user mapid optional...
                                    Will this work?
                                    -->


                                <format mapid_format="monograph">
                                    <!-- format: mandatory, repeatable -->
                                    <!-- As with resource above, match on  -->
                                    <!-- mapid_format: mandatory, non-repeatable, enumerate -->
                                </format>
                                <!-- EXAMPLE: In some cases, multiple formats can use same constraints for a given property...
                                            perhaps this will be rare (?), as this would mean all following values/constraints would be the same
                                        <format>
                                            <label_format>another format</label>
                                            <id_format>format</id_suffix>
                                            <id_custom>same constraints</id_custom>
                                        </format>
                                        -->
                                <user mapid_user="ries07"/>
                                <!-- optional, repeatable -->
                                <!-- This allows users to simply add mapid_user values to any property constraints for a particular format
                                    (or group of formats) that they want to use
                                    ... yeah but this part of the schema is still a bit muddy perhaps? -->


                                <form_order>
                                    <!-- form_order: mandatory, non-repeatable, xsd:decimal, default [?? sort low-to-high or reverse?] -->
                                    <!-- script for outputting RT sorts properties using form_order values-->
                                </form_order>
                                <remark>
                                    <!-- remark: optional, non-repeatable -->
                                    <!-- No remark URL needed: RDA Toolkit link in ref_url above  -->
                                </remark>
                                <attributes lid_attributes="a05">
                                    <!-- attributes, required, non-repeatable -->
                                    <type>
                                        <!-- type: mandatory, non-repeatable, enumerate types
                                                    literal, uriOrLookup, nestedResource, ... -->
                                        <!-- [!?] Need to double check on Sinopia RT prop types for attributes here -->
                                    </type>
                                    <required>
                                        <!-- required: mandatory, non-repeatable, boolean, default False -->
                                    </required>
                                    <repeatable>
                                        <!-- repeatable: mandatory, non-repeatable, boolean, default False -->
                                        <!-- [?] Possible to constrain to True if ordered=True? -->
                                    </repeatable>
                                    <ordered>
                                        <!-- ordered: mandatory, non-repeatable, boolean, default False -->
                                    </ordered>
                                    <type_attributes>
                                        <!-- type_attributes: required, non-repeatable -->
                                        <!-- [?] Possible to make *one of* literal, uri, lookup required? -->
                                        <literal>
                                            <!-- literal: optional, non-repeatable -->
                                            <!-- [?] Possible to make mandatory if type=literal? -->
                                            <default_literal>
                                                <!-- default_literal: mandatory, non-repeatable, xsd:string -->
                                                <!-- [?] Can Sinopia default literals accomodate lang tags? -->
                                            </default_literal>
                                        </literal>
                                        <uri>
                                            <!-- uri: optional, non-repeatable -->
                                            <!-- [?] Possible to make *one of* uri or lookup mandatory if type=uriOrLookup? -->
                                            <default_uri>
                                                <!-- default_uri: mandatory, non-repeatable, xsd:anyURI -->
                                            </default_uri>
                                        </uri>
                                        <lookup>
                                            <!-- lookup: optional, non-repeatable -->
                                            <!-- [?] Possible to make *one of* uri or lookup mandatory if type=uriOrLookup? -->
                                            <!-- [!?] Need to double check on Sinopia RT prop types for attributes here -->
                                            <authority>
                                                <!-- authority: mandatory, repeatable -->
                                                <!-- enumerate, values from
                                                    https://github.com/LD4P/sinopia_editor/blob/master/static/authorityConfig.json -->
                                            </authority>
                                            <default_uri>
                                                <!-- default_uri: mandatory, non-repeatable, xsd:anyURI -->
                                            </default_uri>
                                        </lookup>
                                        <nested_resource>
                                            <!-- nested_resource: optional, non-repeatable -->
                                            <!-- [?] Possible to make mandatory if type=nestedResource? -->
                                            <rt_id>
                                                <!-- rt_id: mandatory, non-repeatable -->
                                                <!-- [?] Can multiple RTs be specified for nested resources in Sinopia RTs? -->
                                                <!-- Would be ideal to enumerate but this would be complex as new RTs may be created, change, etc. -->
                                                <!-- [?] Generate list of all RTs at any given time based on values in map_storage... -->
                                            </rt_id>
                                        </nested_resource>
                                    </type_attributes>
                                </attributes>
                                <guidance lid_guidance="a06">
                                    <!-- guidance: optional, non-repeatable -->
                                    <instructionSet>
                                        <!-- instruction set: optional, non-repeatable -->
                                        <instruction lid_instruction="a07">
                                            <!-- instruction: mandatory, repeatable -->
                                            <p>
                                                <!-- p: optional, repeatable -->
                                            </p>
                                        </instruction>
                                    </instructionSet>
                                    <exampleSet>
                                        <!-- exacmpleSet: optional, non-repeatable -->
                                        <example lid_example="a08">
                                            <!-- example: mandatory, repeatable -->
                                            <p>
                                                <!-- p: optional, repeatable -->
                                            </p>
                                        </example>
                                    </exampleSet>
                                </guidance>
                            </implementationSet>
                        </implementations>
                    </resource>
                </sinopia>
            </platformSet>
        </prop>
    </propSet>
</mapStorage>
